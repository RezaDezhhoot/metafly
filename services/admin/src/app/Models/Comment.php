<?php

namespace App\Models;

use App\Enums\CommentStatus;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\MorphTo;

class Comment extends Model
{
    protected $guarded = ['id'];

    protected $casts = [
        'status' => CommentStatus::class
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::creating(function ($q) {
            $q->is_admin = auth()->check() && auth()->user()->hasRole('admin');
        });
    }

    public function user(): BelongsTo
    {
        return $this->belongsTo(User::class);
    }

    public function commentable(): MorphTo
    {
        return $this->morphTo('commentable');
    }

    public function replies(): HasMany
    {
        return $this->hasMany(self::class,'reply_on');
    }

    public function newReplies(): HasMany
    {
        return $this->hasMany(self::class,'reply_on')->where('status' , CommentStatus::DRAFT);
    }

    public function parent(): BelongsTo
    {
        return  $this->belongsTo(self::class ,'reply_on');
    }

    public function scopePublished($q)
    {
        return $q->where('status', CommentStatus::PUBLISHED);
    }
}
